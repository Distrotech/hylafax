#! /bin/sh
#	$Id$
#
# HylaFAX Facsimile Software
#
# Copyright (c) 1990-1996 Sam Leffler
# Copyright (c) 1991-1996 Silicon Graphics, Inc.
# HylaFAX is a trademark of Silicon Graphics
# 
# Permission to use, copy, modify, distribute, and sell this software and 
# its documentation for any purpose is hereby granted without fee, provided
# that (i) the above copyright notices and this permission notice appear in
# all copies of the software and related documentation, and (ii) the names of
# Sam Leffler and Silicon Graphics may not be used in any advertising or
# publicity relating to the software without the specific, prior written
# permission of Sam Leffler and Silicon Graphics.
# 
# THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
# 
# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
# OF THIS SOFTWARE.
#

#
# faxrcvd file devID commID error-msg
#
if [ $# -lt 4 ]; then
    echo "Usage: $0 file devID commID error-msg [ callID-1 [ callID-2 [ ... [ callID-n ] ] ] ]"
    exit 1
fi

test -f etc/setup.cache || {
    SPOOL=`pwd`
    cat<<EOF

FATAL ERROR: $SPOOL/etc/setup.cache is missing!

The file $SPOOL/etc/setup.cache is not present.  This
probably means the machine has not been setup using the faxsetup(@MANNUM1_8@)
command.  Read the documentation on setting up HylaFAX before you
startup a server system.

EOF
    exit 1
}

# These settings may not be present in setup.cache if user upgraded and
# didn't re-run faxsetup; we set them before calling setup.cache for
# backward compatibility.
ENCODING=base64
MIMENCODE=mimencode
TIFF2PDF=bin/tiff2pdf
TTYCMD=tty
CHARSET=us-ascii

. etc/setup.cache
. bin/common-functions

INFO=$SBIN/faxinfo
FAX2PS=$TIFFBIN/fax2ps
TIFF2PS=tiff2ps
TOADDR=FaxMaster
FROMADDR=fax
TIFFINFO=tiffinfo
NOTIFY_FAXMASTER=always

#
# Redirect errors to a tty, if possible, rather than
# dev-nulling them or allowing them to creep into
# the mail.
#
if $TTYCMD >/dev/null 2>&1; then
    ERRORSTO=`$TTYCMD`
else
    ERRORSTO=/dev/null
fi

#
# Permit various types of attachment types: ps, tif, pdf
# Note that non-ASCII filetypes require an encoder.
# pdf requires tiff2ps and tiff2pdf
#
FILETYPE=ps
SENDTO=

#
# There is no good portable way to find out the fully qualified
# domain name (FQDN) of the host or the TCP port for the hylafax
# service so we fudge here.  Folks may want to tailor this to
# their needs; e.g. add a domain or use localhost so the loopback
# interface is used.
#
HOSTNAME=`hostname`			# XXX no good way to find FQDN
PORT=4559				# XXX no good way to lookup service

FILE="$1"; shift;
DEVICE="$1"; shift;
COMMID="$1"; shift;
MSG="$1"; shift;
COUNT=1
while [ $# -ge 1 ]; do
    # The eval has $1 set yet, and this forces a variable-to-variable
    # assignment, allowing us to not need to do escaping
    eval CALLID$COUNT='$1'
    shift
    COUNT=`expr $COUNT + 1`
done
CIDNUMBER="$CALLID1"
CIDNAME="$CALLID2"

FILENAME=`echo $FILE | $SED -e 's/\.tif//' -e 's/recvq\///'`

parseFaxInfo $FILE

MIMEBOUNDARY="NextPart$$"

if [ -n "$MSG" ]; then
    SESSION_LOG=`cat log/c$COMMID`
    export SESSION_LOG
fi

export COMMID
export DEVICE
export MSG
export FROMADDR
export HOSTNAME
export PORT

#
# Apply customizations.  All customizable variables should
# be set to their non-customized defaults prior to this.
#
if [ -f etc/FaxDispatch ]; then
    . etc/FaxDispatch		# NB: FaxDispatch sets SENDTO
fi

##
## CreateMailMessage <type> <attach_type>
## Creates a MIME structured mail message, using
##  $SPOOL/etc/templates/$TEMPLATE/faxrcvd-<type>.txt
##  and attaching $FILE as <attach_type>, if given the
## extra attache option as yes
##
CreateMailMessage ()
{
    $SED -e '/^$/Q' etc/templates/$TEMPLATE/faxrcvd-$1.txt | template
    echo "Mime-Version: 1.0"
    if [ -n "$2" ]; then
	echo "Content-Type: Multipart/Mixed; Boundary=\"$MIMEBOUNDARY\""
	echo ""
	echo "--$MIMEBOUNDARY"
    fi

    echo "Content-Type: text/plain; charset=$CHARSET"
    echo "Content-Transfer-Encoding: $TEXTENCODING"
    echo ""
    $SED -e '0,/^$/d' etc/templates/$TEMPLATE/faxrcvd-$1.txt | template

    if [ -n "$2" ]; then
	echo "--$MIMEBOUNDARY"
	if [ "$2" = "tif" ]; then
	    echo "Content-Type: image/tiff; name=\"$FILENAME.tif\""
	    echo "Content-Description: FAX document"
	    echo "Content-Transfer-Encoding: $ENCODING"
	    echo "Content-Disposition: attachment; filename=\"$FILENAME.tif\""
	    echo ""
	    encode $FILE;
	elif [ "$2" = "pdf" ]; then
	    echo "Content-Type: application/pdf; name=\"$FILENAME.pdf\""
	    echo "Content-Description: FAX document"
	    echo "Content-Transfer-Encoding: $ENCODING"
	    echo "Content-Disposition: attachment; filename=\"$FILENAME.pdf\""
	    echo ""
	    $TIFF2PDF -o $FILE.pdf $FILE
	    encode $FILE.pdf
	    $RM -f $FILE.pdf 2>$ERRORSTO
	else #  default as Postscript
	    echo "Content-Type: application/postscript; name=\"$FILENAME.ps\""
	    echo "Content-Description: FAX document"
	    echo "Content-Transfer-Encoding: 7bit"
	    echo "Content-Disposition: attachment; filename=\"$FILENAME.ps\""
	    echo ""
	    $FAX2PS $FILE 2>$ERRORSTO
	fi
	echo "--$MIMEBOUNDARY--"
    fi
}

if [ -f $FILE ]; then
    #
    # Don't send FaxMaster duplicates, and FaxMaster may not even
    # want a message at all, depending on NOTIFY_FAXMASTER.
    #
    case $NOTIFY_FAXMASTER$MSG in
	never*)		NOTIFY_FAXMASTER=no;;
	errors)		NOTIFY_FAXMASTER=no;;
	*)		NOTIFY_FAXMASTER=yes;;
    esac
    if [ "$TOADDR" != "$SENDTO" ] && [ "$NOTIFY_FAXMASTER" != "no" ]; then
        if [ -z "$MSG" ]; then
            CreateMailMessage notify-success 2>$ERRORSTO | $SENDMAIL -f$FROMADDR -oi $TOADDR
        else
            CreateMailMessage notify-error 2>$ERRORSTO | $SENDMAIL -f$FROMADDR -oi $TOADDR
        fi
    fi
    if [ -n "$SENDTO" ]; then
        if [ -z "$MSG" ]; then
            CreateMailMessage success $FILETYPE 2>$ERRORSTO | $SENDMAIL -f"$FROMADDR" -oi $TOADDR
        else
            CreateMailMessage error $FILETYPE 2>$ERRORSTO | $SENDMAIL -f"$FROMADDR" -oi $TOADDR
	fi
    fi
else
    #
    # Generate notification mail for a failed attempt.
    #
    CreateMailMessage failure $FILETYPE 2>$ERRORSTO | $SENDMAIL -f"$FROMADDR" -oi $TOADDR

    (echo "Mime-Version: 1.0"
     echo "Content-Type: text/plain; charset=$CHARSET"
     echo "Content-Transfer-Encoding: quoted-printable"
     echo "To: $TOADDR"
     echo "From: $DICTRECEIVEAGENT <$FROMADDR>"
     echo "Subject: $DICTNOTRECEIVED"
     echo ""
     eval echo "$DICTATTEMPTEDFAXFAILED"
     echo ""
     echo "    $MSG"
     echo ""
     echo "$DICTLOGFOLLOWS"
     echo ""
     if [ -f log/c$COMMID ]; then
	$SED -e '/-- data/d' \
	     -e '/start.*timer/d' -e '/stop.*timer/d' \
	     -e 's/=/=3D/g' \
	     log/c$COMMID
     elif [ -n "$COMMID" ]; then
	echo "$DICTNOLOGAVAIL ($DICTCOMMID c$COMMID)."
     else
	echo "$DICTNOLOGAVAIL."
     fi
    ) 2>$ERRORSTO | $SENDMAIL -f$FROMADDR -oi $TOADDR
fi
